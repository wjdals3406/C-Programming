<큐와 스택의 차이점 알기>
큐의 구성요소 : front, rear, data(배열)
큐 : 선입선출(FIFO)
front : 출구(맨 앞)
rear : 입구(맨 뒤)

enqueue: 삽입
dequeue: 제거

데이터 삽입 -> rear 증가
데이터 제거 -> front 증가
front의 위치 : 큐의 첫번째 데이터의 앞에 위치
rear 위치 : 큐의 마지막 데이터의 위치
front = rear -> 큐가 비어있는 상태

<선형큐의 문제점 : 효율성>
앞자리가 비어있어도 마지막자리가 차있으면 full로 인식 -> 효율적이지 않음
이게 싫으면 앞으로 shift하는 연산이 필요한데 이거는 효율적이지 않음
=> 원형 큐 등장!

<원형 큐>
앞자리가 비면 그자리를 rear가 가리키게 됨
초기값(front, rear) = 0

rear랑 front의 값이 같을 때 : empty
rear랑 front랑 하나 차이 날 때 : full

