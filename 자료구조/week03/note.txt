스택 : LIFO(last in first out)
스택 상단(top): 쌓이는 위치(리스트 맨 마지막 요소)
스택 하단(bottom)

스택의 크기가 다 찼는지 확인 : is_full(s) -> 스택의 원소수랑 size랑 같을 때
스택에 원소 쌓을 때: push(s,item) -> append의 개념/ top의 위치가 위로 이동
스택의 원소 꺼낼 때 : pop(s) / top의 위치가 아래로 이동
스택의 맨 위의 원소 확인(확인만 할 뿐, 스택에서 삭제하지 않음 -> pop과의 차이점) : peek(s)
* push,pop,peek 실행 전 is_full로 스택 다 찼는지 확인 후 해당 함수 실행

- top을 배열의 인덱스로 표현해서 -1부터 시작
- 스택에 쌓여있는 element의 수 : top 번호 + 1  

p121 괄호검사 알고리즘 보기 -> 이런 문제 시험에 나올 수 있음

2*(3+5) : 중위 표기법 in fix -> 사람
235+* : 후위 표기법 post fix -> 기계
*2+35 : 전위 표기법 prefix

중위 표기 -> 후위 표기로 바꿀 때 스택 사용
스택의 변화량 어떻게 변했는지(?) 시험에 나옴
