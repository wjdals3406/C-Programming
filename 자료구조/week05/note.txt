리스트
: 순서화 되어있음
- 삽입 연산
- 삭제 연산
- 탐색 연산

스택,큐 -> 삽입,삭제 제한적(맨앞,맨뒤만 삽입, 삭제, 조회 가능)
리스트 -> 삽입, 삭제 제한적X(특정한 위치를 삽입, 삭제, 조회 가능)

insert(list,pos,item) : 특정한 위치를 삽입
-> 이렇게 매개변수에 pos가 들어감
clear(list)

구현 방법
- 배열: 연속적인 공간에 연속적으로 저장함
int data[50]; 이렇게 데이터의 크기를 정해주기 때문에 리스트의 개수에 한계가 있음
데이터 추가나 삭제될 떄 데이터를 뒤/앞으로 이동시키는 작업이 필요함


- 연결 리스트 : 데이터가 띄엄띄엄있지만 그 데이터를 순서화 가능 -> 링크 이용
연속적인 공간이 필요 없어 크기 제한X
데이터 추가나 삭제될 떄 데이터를 뒤/앞으로 이동시키는 작업이 필요X -> pos에 해당하는 값만 변경해주면 됨

리스트에 들어가는 데이터 : 노드
노드 구성요소
- data 
- link : 포인터

리스트의 시작점 : head

자체참조 리스트 선언
typedef struct ListNode{
    element data;
    strcut ListNode *link;
}ListNode;
